# TODO: create schema Material here
type Material implements BaseSchema {
    id: ID!
    class: Class!
    title: String!
    content: String!
    #    category: Category TODO: create category schema graohql and CRUD category first
    #    topic: Topic TODO: create topic schema graphql and CRUD topic first
    videoUrl: String
    fileUrl: String
    deadline: Object
    point: Int!

    createdBy: String!
    createdAt: String!
    updatedBy: String
    updatedAt: String
    isDeleted: Boolean!
}

type MaterialNew {
    classId: ID!
    title: String!
    content: String!
    category: String
    topicId: String
    #    video: Object TODO: learn how to get uploaded file in graphql first
    #    file: Object TODO: learn how to get uploaded file in graphql first
    deadline: Object
    point: Int!
}

type MaterialQuery {
    findAll: [User!]!
    findAllWithPageable(page: Int!, size: Int!): UserPagination!
    findAllDeleted: [User!]!
    findAllDeletedWithPageable(page: Int!, size: Int!): UserPagination!
    findById(id: ID!): User
}

type MaterialMutation {
    save(request: RoleNew!): Role
    update(id: ID!, request: RoleNew!): Role
    deleteById(id: ID!): ResponseDeleteRole!
}