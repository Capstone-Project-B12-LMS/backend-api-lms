enum GuidanceStatus {
    ACCEPTED
    DECLINE
    SENDED
}
type Guidance implements BaseSchema {
    id: ID!
    content: String!
    user: User!
    topic: String
    classEntity: Class!
    status: GuidanceStatus!

    createdBy: String!
    createdAt: String!
    updatedBy: String
    updatedAt: String
    isDeleted: Boolean!
}

input GuidanceNew {
    topic: String
    content: String!
    userId: String!
    classId: String!
}

input GuidanceUpdate {
    topic: String
    content: String!
    status: GuidanceStatus!
}

type GuidancePagination implements PaginationResponse {
    data: [Guidance!]!
    page: Int!
    size: Int!
    totalPage: Int!
    totalSize: Int!
}

type ResponseDeleteGuidance implements ResponseDelete {
    deleted: Guidance
    error: Object
    status: Boolean!
}

type GuidanceQuery {
    findAll: [Guidance!]!
    findAllWithPageable(page: Int!, size: Int!): GuidancePagination!
    findAllDeleted: [Guidance!]!
    findAllDeletedWithPageable(page: Int!, size: Int!): GuidancePagination!
    findById(id: ID!): User
}

type GuidanceMutation{
    save(request: GuidanceNew!): Guidance
    update(id: ID!, request: GuidanceNew!): Guidance
    deleteById(id: ID!): ResponseDeleteGuidance!
}